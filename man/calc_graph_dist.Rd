% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_graph_dist.R
\docType{methods}
\name{calc_graph_dist}
\alias{calc_graph_dist}
\alias{calc_graph_dist,ANY-method}
\alias{calc_graph_dist,missing-method}
\alias{calc_graph_dist,SingleCellExperiment-method}
\alias{calc_graph_dist,seurat-method}
\title{Compute graph-based distance among cells or locations}
\usage{
calc_graph_dist(x, k, ...)

\S4method{calc_graph_dist}{ANY}(x, k, BNPARAM, BPPARAM = SerialParam(),
  transposed = FALSE, n.pcs = NA, irlba.args = list(), ...)

\S4method{calc_graph_dist}{missing}(x, k, BNINDEX, BNPARAM,
  BPPARAM = SerialParam(), ...)

\S4method{calc_graph_dist}{SingleCellExperiment}(x, k, BNPARAM,
  BPPARAM = SerialParam(), assay.use = "logcounts", use.dimred = NA,
  ...)

\S4method{calc_graph_dist}{seurat}(x, k, BNPARAM,
  BPPARAM = SerialParam(), assay.type = "RNA", slot = "data",
  reduction.type = NA, slot.dr = "cell.embeddings", ...)
}
\arguments{
\item{x}{A SingleCellExperiment object, a \code{seurat} object, or a matrix
containing expression values for each gene (row) in each cell (column). The
matrix can be a sparse matrix (\code{\link[Matrix]{dgCMatrix}} or other
sparse matrix classes from the \code{Matrix} package). The data in this matrix
should be normalized. If the cells are in rows, then set
\code{transposed = TRUE} when calling this function.}

\item{k}{An integer scalar for the number of nearest neighbors.}

\item{...}{Further arguments to pass to \code{\link[BiocNeighbors]{findKNN}}.}

\item{BNPARAM}{A \linkS4class{BiocNeighborParam} object specifying the algorithm to use.
        This can be missing if \code{BNINDEX} is supplied, see Details.}

\item{BPPARAM}{a \linkS4class{BiocParallelParam} class for parallelization.}

\item{transposed}{Logical, whether the matrix has cells in rows rather than
in columns.}

\item{n.pcs}{Number of principal components to use if KNN search is to be
done in PCA space. If \code{NA}, which is the default, the full matrix as
specified in x will be used for KNN search. If a positive integer, then
the number specified will be the number of top principal components used.}

\item{irlba.args}{Named list of arguments to be passed to
\code{\link[irlba]{prcomp_irlba}}, such as whether to scale and center the
data prior to PCA.}

\item{BNINDEX}{A \linkS4class{BiocNeighborIndex} object containing precomputed index information.
        This can be missing if \code{BNPARAM} is supplied, see Details.}

\item{assay.use}{A string specifying which assay to use, defaults to
\code{logcounts}, namely log1p normalized data.}

\item{use.dimred}{The low dimensional representation of the data to use for
KNN search. Should be a string to use to access dimension reductions in
\code{\link[SingleCellExperiment]{reducedDim}}, If \code{NA}, as default, the
full data as specified in \code{assay.use} will be used. This argument can
also be a numeric index of the position of the desired dimension reduction
result. If not \code{NA}, then \code{assay.use} will be ignored and the
low dimensional representation will be used for KNN search.}

\item{assay.type}{Type of assay to fetch data for (default is RNA)}

\item{slot}{Specific information to pull (i.e. raw.data, data, scale.data,...). Default is data}

\item{reduction.type}{Type of dimension reduction to use for KNN search. If
\code{NA}, then the full data as specified by \code{assay.type} and \code{slot}
will be used. Otherwise \code{assay.type} and \code{slot} will be ignored,
and the dimension reduction specified by \code{reduction.type} and \code{slot.dr}
will be used instead.}

\item{slot.dr}{A string specifying the slot within the dimension reduction to
use for KNN search, defaults to \code{"cell.embeddings"}.}
}
\value{
A dense square numeric matrix with n cells columns and rows. The
entry at ith row and jth column represents the normalized shortest path
length between vertex i and vertex j.
}
\description{
Since Euclidean distance and Pearson correlation cannot capture the true
geometry of non-linear low dimensional manifolds, a graph-based distance
is used instead in \code{novoSpaRc}. This function first computes a k-nearest
neighbor graph among cells or locations. Then it infers the shortest pairwise
path lengths on the graph for cells and locations, resulting in a graph-based
distance matrix, which is then used for the optimal transport reconstruction
of locations of gene expression.
}
\details{
Whlie the Python implementation of this package uses the Floyd Warshall
algorithm to find the shortest path between vertices in the graph, this
function uses the Johnson algorithm, which is more efficient for sparse
graphs. Let \eqn{V} denote the number of vertices in the graph, and \eqn{E} number of
edges. The Floyd Warshall algorithm has complexity \eqn{O(V^3)}, while the
Johnson algorithm has complexity \eqn{O(V^2 \log(V) + VE)}. We expect k-nearest
neighbor graphs to be sparse since k is usually much smaller than the number
of vertices, so the number of edges is much smaller than in the complete
graph, which is \eqn{V(V-1)} in directed graphs.

The \code{BPPARAM} argument is used for parallel computing in k-nearrest
neighbor search. For instance, use \code{BPPARAM = MulticoreParam(3)} for
using 3 threads in shared memory computing.

The \code{BNINDEX} argument is for precomputed index information for
different algorithms to find k-nearests neighbors. Using a pre-computed index
will save when multiple KNN search are performed on the same x.
If \code{BNINDEX} is to be specified, then x should be missing.

The \code{BNPARAM} argument is used for setting parameters for KNN search
algorithms, such as the kind of distance metric used.

Only one of \code{BNINDEX} and \code{BNPARAM} is needed to determine the
algorithm used, and if both are supplied, they must specify the same algorithm.
If both are missing, then the KmKNN algorithm will be used.
}
